package projetjava;
/**
 *
 * @author Maher Dissem
 */
import java.sql.*;
import java.util.Calendar;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class InsertR extends javax.swing.JFrame {

   // String url="jdbc:mysql://localhost/javadatabase?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC";    
   // String DB_user="root";
   // String password="samir";
    
    Connection con;
    Statement st;
    ResultSet res;
    DefaultTableModel d=new DefaultTableModel();
    DefaultTableModel d2=new DefaultTableModel();
    
    public InsertR()
    {
        this.setLocation(300, 200);
        this.show();
        this.setTitle("New donation request");
        initComponents();
        this.addWindowListener(new java.awt.event.WindowAdapter() {
        @Override
        public void windowClosing(java.awt.event.WindowEvent windowEvent) {
             Requestframe m = new Requestframe(); // open the main menu 
             m.setVisible(true);
            try{
                con.close();
                dispose();
                
        }catch(Exception ex){System.out.println(ex.getMessage());}
        }
        });
        
        d=(DefaultTableModel) jTable1.getModel();
        d2=(DefaultTableModel) jTable2.getModel();
        
        
        try{
            Class.forName("com.mysql.cj.jdbc.Driver").newInstance();
            //con = DriverManager.getConnection(url,DB_user,password);
            con = DBConnect.openConnection();
            st=con.createStatement();
        }catch(Exception ex){System.out.println(ex.getMessage());}
        
        // available articles 
        try
        {
            ResultSet rs=st.executeQuery("SELECT ARTICLE_ID,NATURE,RECEIPT_QUANTITY FROM javadatabase.articles,javadatabase.type where ARTICLE_STATUS='inProgress' and javadatabase.articles.TYPE_ID=javadatabase.type.TYPE_ID;");
            while(rs.next())
            {
                String[] t=new String[]{
                    rs.getString("ARTICLE_ID"),rs.getString("NATURE"),rs.getString("RECEIPT_QUANTITY")
                };     
                d.addRow(t);
            }           
        } catch (Exception ex) {
            JOptionPane jp=new JOptionPane("");
            jp.showMessageDialog(null, ex.toString(), "my title", JOptionPane.INFORMATION_MESSAGE);
        } 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField7 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jTextField6 = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jTextField8 = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jTextField9 = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();

        jTextField7.setText("jTextField7");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(620, 430));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Lucida Console", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 0, 102));
        jLabel1.setText("New donation Request");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 0, -1, 40));

        jLabel2.setFont(new java.awt.Font("Century Schoolbook", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(102, 0, 102));
        jLabel2.setText("Receiver information");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(33, 38, -1, -1));

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField1KeyPressed(evt);
            }
        });
        getContentPane().add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 70, 80, -1));

        jLabel3.setText("First name");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 70, -1, -1));

        jLabel4.setText("Last name");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 70, -1, -1));

        jLabel5.setText("Adress");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 110, -1, -1));

        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });
        jTextField2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField2KeyPressed(evt);
            }
        });
        getContentPane().add(jTextField2, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 70, 80, -1));
        getContentPane().add(jTextField3, new org.netbeans.lib.awtextra.AbsoluteConstraints(111, 109, 80, -1));

        jLabel6.setText("e-Mail");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 110, -1, -1));

        jTextField4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField4ActionPerformed(evt);
            }
        });
        getContentPane().add(jTextField4, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 110, 80, -1));

        jLabel7.setText("Number");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 110, -1, -1));
        getContentPane().add(jTextField5, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 110, 80, -1));

        jButton1.setText("Add request");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(469, 352, -1, -1));

        jLabel8.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(153, 0, 102));
        jLabel8.setText("Unless this is a new receiver, only enter the ID or the first and last name.");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 40, -1, 30));
        getContentPane().add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(33, 151, 535, 10));

        jLabel9.setFont(new java.awt.Font("Century Schoolbook", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(102, 0, 102));
        jLabel9.setText("Available articles");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(33, 167, -1, -1));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Type", "Quantity"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(20);
            jTable1.getColumnModel().getColumn(0).setMaxWidth(20);
            jTable1.getColumnModel().getColumn(2).setPreferredWidth(50);
            jTable1.getColumnModel().getColumn(2).setMaxWidth(50);
        }

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(33, 190, 215, 152));

        jLabel10.setFont(new java.awt.Font("Century Schoolbook", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(102, 0, 102));
        jLabel10.setText("Requested articles");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(356, 167, -1, -1));

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Type", "Quantity"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTable2);
        if (jTable2.getColumnModel().getColumnCount() > 0) {
            jTable2.getColumnModel().getColumn(0).setPreferredWidth(20);
            jTable2.getColumnModel().getColumn(0).setMaxWidth(20);
            jTable2.getColumnModel().getColumn(2).setPreferredWidth(50);
            jTable2.getColumnModel().getColumn(2).setMaxWidth(50);
        }

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(353, 188, 215, 152));

        jButton2.setText(">>>");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 240, -1, -1));

        jTextField6.setText("1");
        getContentPane().add(jTextField6, new org.netbeans.lib.awtextra.AbsoluteConstraints(307, 278, 28, -1));

        jLabel11.setForeground(new java.awt.Color(0, 0, 0));
        jLabel11.setText("Quantity");
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(254, 282, -1, -1));
        getContentPane().add(jTextField8, new org.netbeans.lib.awtextra.AbsoluteConstraints(101, 356, 70, -1));

        jButton3.setText("Search");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(177, 352, -1, -1));

        jButton4.setText("<<<");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 310, -1, -1));

        jTextField9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField9ActionPerformed(evt);
            }
        });
        getContentPane().add(jTextField9, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 70, 80, -1));

        jLabel13.setText("ID");
        getContentPane().add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 70, -1, -1));

        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projetjava/donation request.jpg"))); // NOI18N
        getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 600, 390));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField3ActionPerformed

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jTextField4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField4ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed
    public static boolean isNumeric(String strNum) {
        if (strNum == null) {
            return false;
        }
        try {
            double d = Double.parseDouble(strNum);
        } catch (NumberFormatException nfe) {
            return false;
        }
        return true;
    }
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // add request
        try{
            // add receiver
            if(d2.getRowCount()==0){
                JOptionPane jp=new JOptionPane();
                jp.showMessageDialog(null, "Please select the desired articles first", "Failure", JOptionPane.INFORMATION_MESSAGE);
                return;
            }
            int id_receiver=-1;
            String fname=jTextField1.getText();
            String lname=jTextField2.getText();
            String adress=jTextField3.getText();
            String email=jTextField4.getText();
            String number=jTextField5.getText();
            String id=jTextField9.getText();
            if( id.length()>=1 && email.length()>=1 ){
                JOptionPane jp=new JOptionPane();
                jp.showMessageDialog(null, "If this is a new receiver, do not enter an ID", "Failure", JOptionPane.INFORMATION_MESSAGE);
                return;
            }
            
            String reqGetIdMaxRec="SELECT max(RECEIVER_ID) FROM javadatabase.receivers;";
            if(id.length()>=1){              // insert by ID
                String test_id="SELECT RECEIVER_ID FROM javadatabase.receivers where RECEIVER_ID="+id+";";
                ResultSet rs_id_rec=st.executeQuery(test_id);   // see if the id is in the database
                while(rs_id_rec.next()){        
                    id=rs_id_rec.getString("RECEIVER_ID");
                    if(id==null) id_receiver=-1;
                    else id_receiver=Integer.valueOf(id);
                }
                if(id_receiver==-1){
                    JOptionPane jp=new JOptionPane();
                    jp.showMessageDialog(null, "Id is not in the database, you can insert the name and family name of the receiver instead", "Failure", JOptionPane.INFORMATION_MESSAGE);
                    return;
                }    
            }   
            else{                            // insert by name & lname
                if(fname.length()<3 || lname.length()<3){
                    JOptionPane jp=new JOptionPane();
                    jp.showMessageDialog(null, "Please choose the receiver first", "Failure", JOptionPane.INFORMATION_MESSAGE);
                    return;
                }   
                String reqGetIdRec="SELECT RECEIVER_ID FROM javadatabase.receivers where RECEIVER_FNAME='"+fname+"' and RECEIVER_LNAME='"+lname+"';" ;
                ResultSet rs_id_rec=st.executeQuery(reqGetIdRec);   // get the id of the member if he's not new
                while(rs_id_rec.next()){        
                    id=rs_id_rec.getString("RECEIVER_ID");
                    if(id==null) id_receiver=-1;
                    else id_receiver=Integer.valueOf(id);
                }
            }                    
            if(id_receiver==-1){                // add this new donator to the DB 
                if(!isNumeric(number)){
                JOptionPane jp=new JOptionPane();
                jp.showMessageDialog(null, "Number input is not numerical", "Failure", JOptionPane.INFORMATION_MESSAGE);
                return;
                } 
                if(fname.length()<3 || lname.length()<3 || adress.length()<3 || email.length()<3|| number.length()<3){
                JOptionPane jp=new JOptionPane();
                jp.showMessageDialog(null, "This is a new receiver, please fill all the fields", "Failure", JOptionPane.INFORMATION_MESSAGE);
                return;
                } 
                ResultSet rs_id_max_don=st.executeQuery(reqGetIdMaxRec);
                while(rs_id_max_don.next()){
                    id=rs_id_max_don.getString("max(RECEIVER_ID)");
                    if(id==null) id_receiver=0; // case of an empty database
                    else id_receiver=Integer.valueOf(id);
                }
                id_receiver++;
                String reqInsRec="INSERT INTO `javadatabase`.`receivers` (`RECEIVER_ID`,`RECEIVER_FNAME`,`RECEIVER_LNAME`,`RECEIVER_NUM`,`RECEIVER_ADR`,`RECEIVER_EMAIL`) VALUES ("+Integer.toString(id_receiver)+",'"+fname+"','"+lname+"',"+number+",'"+adress+"','"+email+"');";
                int insRec=st.executeUpdate(reqInsRec);
            }
            
            // add request
            int id_req=-1;
            String reqGetMaxIdReq="SELECT max(REQUEST_ID) FROM javadatabase.requests;";
            ResultSet rs_id_req=st.executeQuery(reqGetMaxIdReq);
            String max;
            while(rs_id_req.next())
            {
                max=rs_id_req.getString("max(REQUEST_ID)");
                if(max==null) id_req=0; // case of an empty database
                else
                id_req=Integer.valueOf(max);
            }
            id_req++;
            String reqIns="INSERT INTO `javadatabase`.`requests` (`REQUEST_ID`,`REQUEST_STATUS`,`RECEIVER_ID`) VALUES("+Integer.toString(id_req)+",'inProgress',"+Integer.toString(id_receiver)+");";
            int insReq=st.executeUpdate(reqIns);
            
            // add article_request
            int id_req_art=-1;
            String reqGetMaxId="SELECT max(ARTICLE_REQUEST_ID) FROM javadatabase.article_request;";
            ResultSet rs_id_req_act=st.executeQuery(reqGetMaxId);
            String max2;
            while(rs_id_req_act.next())
            {
                max2=rs_id_req_act.getString("max(ARTICLE_REQUEST_ID)");
                if(max2==null) id_req_art=0; // case of an empty database
                else
                id_req_art=Integer.valueOf(max2);
            }
            id_req_art++;
            java.sql.Date date = new java.sql.Date(Calendar.getInstance().getTime().getTime());
            int n=d2.getRowCount();

            for(int i=0;i<n;i++){
                String reqInsReq_Art="INSERT INTO `javadatabase`.`article_request` (`ARTICLE_REQUEST_ID`,`ARTICLE_ID`,`REQUEST_ID`,`REQUEST_QUANTITY`,`REQUEST_DATE`) "
                        + "VALUES ("+Integer.toString(id_req_art)+","+(String)d2.getValueAt(i,0)+","+Integer.toString(id_req)+","+(String)d2.getValueAt(i,2)+",'"+date+"');";
                int insReq_Art=st.executeUpdate(reqInsReq_Art);
                id_req_art++;
            }
            
            JOptionPane jp=new JOptionPane();
            jp.showMessageDialog(null, "Request Added", "Success", JOptionPane.INFORMATION_MESSAGE);
            
            jTextField1.setText("");
            jTextField2.setText("");
            jTextField3.setText("");
            jTextField4.setText("");
            jTextField5.setText("");
            jTextField6.setText("1");
            jTextField9.setText("");
            d2.setRowCount(0);
            

        }
        
        
        catch (Exception ex) {
            JOptionPane jp=new JOptionPane();
            jp.showMessageDialog(null, ex.toString(), "Failure", JOptionPane.INFORMATION_MESSAGE);
        } 
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // Add arcticles to wish list
        int selectedRowIndex = jTable1.getSelectedRow();
        if(selectedRowIndex==-1)
        {
            JOptionPane jp=new JOptionPane();
            jp.showMessageDialog(null, "select a row first", "Failure", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        String id=(String)d.getValueAt(selectedRowIndex, 0);
        String qte=jTextField6.getText();
        String desc=(String)d.getValueAt(selectedRowIndex, 1);
        String[] t=new String[]{
            id,desc,qte
        };     
        d2.addRow(t);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // Search
        try
        {
            String search;
            search=jTextField8.getText();
            String req="SELECT ARTICLE_ID,NATURE,RECEIPT_QUANTITY FROM javadatabase.articles,javadatabase.type where ARTICLE_STATUS='inProgress' and javadatabase.articles.TYPE_ID=javadatabase.type.TYPE_ID and NATURE like '%"+search+"%';";    
            if(search=="") req="SELECT * FROM javadatabase.members;";
            ResultSet rs=st.executeQuery(req);
            d.setRowCount(0); // clear jtable
            while(rs.next())
            {
                String[] t=new String[]{
                    rs.getString("ARTICLE_ID"),rs.getString("NATURE"),rs.getString("RECEIPT_QUANTITY")
                };
                d.addRow(t);
            }           
        } catch (Exception ex) {
            JOptionPane jp=new JOptionPane();
            jp.showMessageDialog(null, ex.toString(), "Failure", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // remove selected articles
        int selectedRowIndex = jTable2.getSelectedRow();
        if(selectedRowIndex==-1)
        {
            JOptionPane jp=new JOptionPane();
            jp.showMessageDialog(null, "select a row first", "Failure", JOptionPane.INFORMATION_MESSAGE);
            return;
        }  
        String qteS=(String) jTable2.getValueAt(selectedRowIndex, 2); int qte=Integer.parseInt(qteS);
        int qte_to_remove=Integer.parseInt(jTextField6.getText());
        int new_qte=qte-qte_to_remove;
        if(new_qte>0) jTable2.setValueAt(Integer.toString(new_qte), selectedRowIndex, 2);
        else {
            ((DefaultTableModel)jTable2.getModel()).removeRow(selectedRowIndex);
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jTextField9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField9ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField9ActionPerformed

    private void jTextField1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyPressed
        // do not accept numerical input
        char c=evt.getKeyChar();
        if(Character.isLetter(c)||Character.isWhitespace(c)||Character.isISOControl(c)){
            jTextField1.setEditable(true);
        }else{
        jTextField1.setEditable(false);
        }
    }//GEN-LAST:event_jTextField1KeyPressed

    private void jTextField2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField2KeyPressed
                // do not accept numerical input
        char c=evt.getKeyChar();
        if(Character.isLetter(c)||Character.isWhitespace(c)||Character.isISOControl(c)){
            jTextField2.setEditable(true);
        }else{
        jTextField2.setEditable(false);
        }
    }//GEN-LAST:event_jTextField2KeyPressed

    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InsertR().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField jTextField9;
    // End of variables declaration//GEN-END:variables

    public void SetVisible(boolean b) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
